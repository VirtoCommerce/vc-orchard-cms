@{
    Style.Require("LatoFont");
    Style.Require("VirtoCommerceStore");
}

<ul class="vc-pagination">
    @for (var p = 1; p <= Model.ProductList.TotalPageCount; p++)
    {
        <li class="@(Model.ProductList.PageIndex == p ? "selected" : string.Empty)">
            <a href="@Href(string.Format("~/Category?id={0}&p={1}", Model.CategorySlug, p))">@p</a>
        </li>
    }
</ul>
<ul class="vc-product-list">
    @foreach (var product in Model.ProductList)
    {
        <li class="vc-product">
            <a href="@Href(String.Format(product.UrlPattern, product.Slug))" title="@product.Name">
                <div class="vc-image">
                    <img alt="@product.Name" src="@product.ImageUrl" />
                </div>
                <div class="vc-title">
                    <div class="vc-price">
                        <span class="vc-amount">$@(product.Price != null ? product.Price.Original : 0)</span>
                    </div>
                    <h3>@product.Name</h3>
                </div>
            </a>
        </li>
    }
</ul>

<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/masonry/3.3.1/masonry.pkgd.min.js"></script>
<script>
    var container = $(".vc-product-list");
    var images = container.find("img");

    var totalImages = images.length;
    var totalLoaded = 0;
    images.on("load", function () {
        totalLoaded++;
        if (totalImages === totalLoaded) {
            container.masonry({
                itemSelector: ".vc-product"
            });
        }
    });
</script>